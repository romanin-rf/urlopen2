from io import IOBase
from typing import Optional, IO


class URLFile(IOBase):
    def __init__(
        self,
        url: str,
        buffer: IO[bytes],
        **kwargs
    ) -> None: ...
    
    @staticmethod
    def open(
        url: str,
        *,
        buffer: Optional[IO[bytes]]=None,
        **kwargs
    ) -> None: ...

    @property
    def length(self) -> Optional[int]: ...
    @property
    def downloaded(self) -> int: ...
    @property
    def name(self) -> str: ...
    @property
    def mode(self) -> str: ...
    @property
    def closed(self) -> bool: ...
    @property
    def full(self) -> bool: ...
    
    def fulling(self) -> None:
        """Full topload of the file to the buffer."""
        ...

    def readable(self) -> bool: ...
    def seekable(self) -> bool: ...
    def writable(self) -> bool: ...
    
    def tell(self) -> int: ...
    def seek(self, offset: int, whence: int=...) -> int: ...
    def read(self, n: Optional[int]=...) -> bytes: ...
    
    def close(self) -> None: ...
